#if !canImport(ObjectiveC)
import XCTest

extension BlankTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BlankTests = [
        ("testEncryptVersion", testEncryptVersion),
        ("testHwpVersion", testHwpVersion),
        ("testSignature", testSignature),
    ]
}

extension Create2014Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Create2014Tests = [
        ("testCreate", testCreate),
        ("testDocInfo", testDocInfo),
        ("testfileHeader", testfileHeader),
        ("testSectionArray", testSectionArray),
    ]
}

extension Create2018Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Create2018Tests = [
        ("testCreate", testCreate),
        ("testDocInfo", testDocInfo),
        ("testfileHeader", testfileHeader),
        ("testPreviewText", testPreviewText),
        ("testSectionArray", testSectionArray),
    ]
}

extension FileHeaderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileHeaderTests = [
        ("testCCL", testCCL),
        ("testDoesHaveDocumentHistory", testDoesHaveDocumentHistory),
        ("testIsKOGLDocument", testIsKOGLDocument),
        ("testIsTracingChange", testIsTracingChange),
    ]
}

extension HwpErrorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HwpErrorTests = [
        ("test", test),
    ]
}

extension HwpUtilTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HwpUtilTests = [
        ("testBitsFromInt8", testBitsFromInt8),
        ("testCommonCtrlId", testCommonCtrlId),
        ("testCompressUncompress", testCompressUncompress),
        ("testFieldCtrlId", testFieldCtrlId),
        ("testGetBitValue", testGetBitValue),
        ("testOtherCtrlID", testOtherCtrlID),
        ("testUInt32ToBits", testUInt32ToBits),
    ]
}

extension NooriDocInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NooriDocInfoTests = [
        ("testBinData", testBinData),
        ("testBorderFill", testBorderFill),
        ("testCaratLocation", testCaratLocation),
        ("testCharShape", testCharShape),
        ("testCompatibleDocument", testCompatibleDocument),
        ("testCtrlHeader", testCtrlHeader),
        ("testFaceName", testFaceName),
        ("testSectionSize", testSectionSize),
        ("testStartingIndex", testStartingIndex),
        ("testTabDef", testTabDef),
    ]
}

extension NooriPreviewTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NooriPreviewTests = [
        ("testPreviewText", testPreviewText),
    ]
}

extension NooriSectionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NooriSectionTests = [
        ("testColumn", testColumn),
        ("testGenShapeObject", testGenShapeObject),
        ("testParaCharShape", testParaCharShape),
        ("testParagraph", testParagraph),
        ("testParaLineSeg", testParaLineSeg),
        ("testParaText", testParaText),
        ("testTable", testTable),
    ]
}

extension VersionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VersionTests = [
        ("test2007", test2007),
        ("test2014VP", test2014VP),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BlankTests.__allTests__BlankTests),
        testCase(Create2014Tests.__allTests__Create2014Tests),
        testCase(Create2018Tests.__allTests__Create2018Tests),
        testCase(FileHeaderTests.__allTests__FileHeaderTests),
        testCase(HwpErrorTests.__allTests__HwpErrorTests),
        testCase(HwpUtilTests.__allTests__HwpUtilTests),
        testCase(NooriDocInfoTests.__allTests__NooriDocInfoTests),
        testCase(NooriPreviewTests.__allTests__NooriPreviewTests),
        testCase(NooriSectionTests.__allTests__NooriSectionTests),
        testCase(VersionTests.__allTests__VersionTests),
    ]
}
#endif
